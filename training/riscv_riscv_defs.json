{"question": "/* Generated by Yosys 0.53 (git sha1 53c22ab7c, g++ 12.2.1 -fPIC -O3) */\n", "answer": "//-----------------------------------------------------------------\n//                         RISC-V Core\n//                            V1.0.1\n//                     Ultra-Embedded.com\n//                     Copyright 2014-2019\n//\n//                   admin@ultra-embedded.com\n//\n//                       License: BSD\n//-----------------------------------------------------------------\n//\n// Copyright (c) 2014-2019, Ultra-Embedded.com\n// All rights reserved.\n// \n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions \n// are met:\n//   - Redistributions of source code must retain the above copyright\n//     notice, this list of conditions and the following disclaimer.\n//   - Redistributions in binary form must reproduce the above copyright\n//     notice, this list of conditions and the following disclaimer \n//     in the documentation and/or other materials provided with the \n//     distribution.\n//   - Neither the name of the author nor the names of its contributors \n//     may be used to endorse or promote products derived from this \n//     software without specific prior written permission.\n// \n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT \n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR \n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE \n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR \n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR \n// BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF \n// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF \n// THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF \n// SUCH DAMAGE.\n//-----------------------------------------------------------------\n//--------------------------------------------------------------------\n// ALU Operations\n//--------------------------------------------------------------------\n`define ALU_NONE                                4'b0000\n`define ALU_SHIFTL                              4'b0001\n`define ALU_SHIFTR                              4'b0010\n`define ALU_SHIFTR_ARITH                        4'b0011\n`define ALU_ADD                                 4'b0100\n`define ALU_SUB                                 4'b0110\n`define ALU_AND                                 4'b0111\n`define ALU_OR                                  4'b1000\n`define ALU_XOR                                 4'b1001\n`define ALU_LESS_THAN                           4'b1010\n`define ALU_LESS_THAN_SIGNED                    4'b1011\n\n//--------------------------------------------------------------------\n// Instructions Masks\n//--------------------------------------------------------------------\n// andi\n`define INST_ANDI 32'h7013\n`define INST_ANDI_MASK 32'h707f\n\n// addi\n`define INST_ADDI 32'h13\n`define INST_ADDI_MASK 32'h707f\n\n// slti\n`define INST_SLTI 32'h2013\n`define INST_SLTI_MASK 32'h707f\n\n// sltiu\n`define INST_SLTIU 32'h3013\n`define INST_SLTIU_MASK 32'h707f\n\n// ori\n`define INST_ORI 32'h6013\n`define INST_ORI_MASK 32'h707f\n\n// xori\n`define INST_XORI 32'h4013\n`define INST_XORI_MASK 32'h707f\n\n// slli\n`define INST_SLLI 32'h1013\n`define INST_SLLI_MASK 32'hfc00707f\n\n// srli\n`define INST_SRLI 32'h5013\n`define INST_SRLI_MASK 32'hfc00707f\n\n// srai\n`define INST_SRAI 32'h40005013\n`define INST_SRAI_MASK 32'hfc00707f\n\n// lui\n`define INST_LUI 32'h37\n`define INST_LUI_MASK 32'h7f\n\n// auipc\n`define INST_AUIPC 32'h17\n`define INST_AUIPC_MASK 32'h7f\n\n// add\n`define INST_ADD 32'h33\n`define INST_ADD_MASK 32'hfe00707f\n\n// sub\n`define INST_SUB 32'h40000033\n`define INST_SUB_MASK 32'hfe00707f\n\n// slt\n`define INST_SLT 32'h2033\n`define INST_SLT_MASK 32'hfe00707f\n\n// sltu\n`define INST_SLTU 32'h3033\n`define INST_SLTU_MASK 32'hfe00707f\n\n// xor\n`define INST_XOR 32'h4033\n`define INST_XOR_MASK 32'hfe00707f\n\n// or\n`define INST_OR 32'h6033\n`define INST_OR_MASK 32'hfe00707f\n\n// and\n`define INST_AND 32'h7033\n`define INST_AND_MASK 32'hfe00707f\n\n// sll\n`define INST_SLL 32'h1033\n`define INST_SLL_MASK 32'hfe00707f\n\n// srl\n`define INST_SRL 32'h5033\n`define INST_SRL_MASK 32'hfe00707f\n\n// sra\n`define INST_SRA 32'h40005033\n`define INST_SRA_MASK 32'hfe00707f\n\n// jal\n`define INST_JAL 32'h6f\n`define INST_JAL_MASK 32'h7f\n\n// jalr\n`define INST_JALR 32'h67\n`define INST_JALR_MASK 32'h707f\n\n// beq\n`define INST_BEQ 32'h63\n`define INST_BEQ_MASK 32'h707f\n\n// bne\n`define INST_BNE 32'h1063\n`define INST_BNE_MASK 32'h707f\n\n// blt\n`define INST_BLT 32'h4063\n`define INST_BLT_MASK 32'h707f\n\n// bge\n`define INST_BGE 32'h5063\n`define INST_BGE_MASK 32'h707f\n\n// bltu\n`define INST_BLTU 32'h6063\n`define INST_BLTU_MASK 32'h707f\n\n// bgeu\n`define INST_BGEU 32'h7063\n`define INST_BGEU_MASK 32'h707f\n\n// lb\n`define INST_LB 32'h3\n`define INST_LB_MASK 32'h707f\n\n// lh\n`define INST_LH 32'h1003\n`define INST_LH_MASK 32'h707f\n\n// lw\n`define INST_LW 32'h2003\n`define INST_LW_MASK 32'h707f\n\n// lbu\n`define INST_LBU 32'h4003\n`define INST_LBU_MASK 32'h707f\n\n// lhu\n`define INST_LHU 32'h5003\n`define INST_LHU_MASK 32'h707f\n\n// lwu\n`define INST_LWU 32'h6003\n`define INST_LWU_MASK 32'h707f\n\n// sb\n`define INST_SB 32'h23\n`define INST_SB_MASK 32'h707f\n\n// sh\n`define INST_SH 32'h1023\n`define INST_SH_MASK 32'h707f\n\n// sw\n`define INST_SW 32'h2023\n`define INST_SW_MASK 32'h707f\n\n// ecall\n`define INST_ECALL 32'h73\n`define INST_ECALL_MASK 32'hffffffff\n\n// ebreak\n`define INST_EBREAK 32'h100073\n`define INST_EBREAK_MASK 32'hffffffff\n\n// eret\n`define INST_ERET 32'h200073\n`define INST_ERET_MASK 32'hcfffffff\n\n// csrrw\n`define INST_CSRRW 32'h1073\n`define INST_CSRRW_MASK 32'h707f\n\n// csrrs\n`define INST_CSRRS 32'h2073\n`define INST_CSRRS_MASK 32'h707f\n\n// csrrc\n`define INST_CSRRC 32'h3073\n`define INST_CSRRC_MASK 32'h707f\n\n// csrrwi\n`define INST_CSRRWI 32'h5073\n`define INST_CSRRWI_MASK 32'h707f\n\n// csrrsi\n`define INST_CSRRSI 32'h6073\n`define INST_CSRRSI_MASK 32'h707f\n\n// csrrci\n`define INST_CSRRCI 32'h7073\n`define INST_CSRRCI_MASK 32'h707f\n\n// mul\n`define INST_MUL 32'h2000033\n`define INST_MUL_MASK 32'hfe00707f\n\n// mulh\n`define INST_MULH 32'h2001033\n`define INST_MULH_MASK 32'hfe00707f\n\n// mulhsu\n`define INST_MULHSU 32'h2002033\n`define INST_MULHSU_MASK 32'hfe00707f\n\n// mulhu\n`define INST_MULHU 32'h2003033\n`define INST_MULHU_MASK 32'hfe00707f\n\n// div\n`define INST_DIV 32'h2004033\n`define INST_DIV_MASK 32'hfe00707f\n\n// divu\n`define INST_DIVU 32'h2005033\n`define INST_DIVU_MASK 32'hfe00707f\n\n// rem\n`define INST_REM 32'h2006033\n`define INST_REM_MASK 32'hfe00707f\n\n// remu\n`define INST_REMU 32'h2007033\n`define INST_REMU_MASK 32'hfe00707f\n\n// wfi\n`define INST_WFI 32'h10500073\n`define INST_WFI_MASK 32'hffff8fff\n\n// fence\n`define INST_FENCE 32'hf\n`define INST_FENCE_MASK 32'h707f\n\n// sfence\n`define INST_SFENCE 32'h12000073\n`define INST_SFENCE_MASK 32'hfe007fff\n\n// fence.i\n`define INST_IFENCE 32'h100f\n`define INST_IFENCE_MASK 32'h707f\n\n//--------------------------------------------------------------------\n// Privilege levels\n//--------------------------------------------------------------------\n`define PRIV_USER         2'd0\n`define PRIV_SUPER        2'd1\n`define PRIV_MACHINE      2'd3\n\n//--------------------------------------------------------------------\n// IRQ Numbers\n//--------------------------------------------------------------------\n`define IRQ_S_SOFT   1\n`define IRQ_M_SOFT   3\n`define IRQ_S_TIMER  5\n`define IRQ_M_TIMER  7\n`define IRQ_S_EXT    9\n`define IRQ_M_EXT    11\n`define IRQ_MIN      (`IRQ_S_SOFT)\n`define IRQ_MAX      (`IRQ_M_EXT + 1)\n`define IRQ_MASK     ((1 << `IRQ_M_EXT)   | (1 << `IRQ_S_EXT)   |                       (1 << `IRQ_M_TIMER) | (1 << `IRQ_S_TIMER) |                       (1 << `IRQ_M_SOFT)  | (1 << `IRQ_S_SOFT))\n\n`define SR_IP_MSIP_R      `IRQ_M_SOFT\n`define SR_IP_MTIP_R      `IRQ_M_TIMER\n`define SR_IP_MEIP_R      `IRQ_M_EXT\n`define SR_IP_SSIP_R      `IRQ_S_SOFT\n`define SR_IP_STIP_R      `IRQ_S_TIMER\n`define SR_IP_SEIP_R      `IRQ_S_EXT\n\n//--------------------------------------------------------------------\n// CSR Registers - Simulation control\n//--------------------------------------------------------------------\n`define CSR_DSCRATCH       12'h7b2\n`define CSR_SIM_CTRL       12'h8b2\n`define CSR_SIM_CTRL_MASK  32'hFFFFFFFF\n    `define CSR_SIM_CTRL_EXIT (0 << 24)\n    `define CSR_SIM_CTRL_PUTC (1 << 24)\n\n//--------------------------------------------------------------------\n// CSR Registers\n//--------------------------------------------------------------------\n`define CSR_MSTATUS       12'h300\n`define CSR_MSTATUS_MASK  32'hFFFFFFFF\n`define CSR_MISA          12'h301\n`define CSR_MISA_MASK     32'hFFFFFFFF\n    `define MISA_RV32     32'h40000000\n    `define MISA_RVI      32'h00000100\n    `define MISA_RVE      32'h00000010\n    `define MISA_RVM      32'h00001000\n    `define MISA_RVA      32'h00000001\n    `define MISA_RVF      32'h00000020\n    `define MISA_RVD      32'h00000008\n    `define MISA_RVC      32'h00000004\n    `define MISA_RVS      32'h00040000\n    `define MISA_RVU      32'h00100000\n`define CSR_MEDELEG       12'h302\n`define CSR_MEDELEG_MASK  32'h0000FFFF\n`define CSR_MIDELEG       12'h303\n`define CSR_MIDELEG_MASK  32'h0000FFFF\n`define CSR_MIE           12'h304\n`define CSR_MIE_MASK      `IRQ_MASK\n`define CSR_MTVEC         12'h305\n`define CSR_MTVEC_MASK    32'hFFFFFFFF\n`define CSR_MSCRATCH      12'h340\n`define CSR_MSCRATCH_MASK 32'hFFFFFFFF\n`define CSR_MEPC          12'h341\n`define CSR_MEPC_MASK     32'hFFFFFFFF\n`define CSR_MCAUSE        12'h342\n`define CSR_MCAUSE_MASK   32'h8000000F\n`define CSR_MTVAL         12'h343\n`define CSR_MTVAL_MASK    32'hFFFFFFFF\n`define CSR_MIP           12'h344\n`define CSR_MIP_MASK      `IRQ_MASK\n`define CSR_MCYCLE        12'hc00\n`define CSR_MCYCLE_MASK   32'hFFFFFFFF\n`define CSR_MTIME         12'hc01\n`define CSR_MTIME_MASK    32'hFFFFFFFF\n`define CSR_MTIMEH        12'hc81\n`define CSR_MTIMEH_MASK   32'hFFFFFFFF\n`define CSR_MHARTID       12'hF14\n`define CSR_MHARTID_MASK  32'hFFFFFFFF\n\n// Non-std\n`define CSR_MTIMECMP        12'h7c0\n`define CSR_MTIMECMP_MASK   32'hFFFFFFFF\n\n//-----------------------------------------------------------------\n// CSR Registers - Supervisor\n//-----------------------------------------------------------------\n`define CSR_SSTATUS       12'h100\n`define CSR_SSTATUS_MASK  `SR_SMODE_MASK\n`define CSR_SIE           12'h104\n`define CSR_SIE_MASK      ((1 << `IRQ_S_EXT) | (1 << `IRQ_S_TIMER) | (1 << `IRQ_S_SOFT))\n`define CSR_STVEC         12'h105\n`define CSR_STVEC_MASK    32'hFFFFFFFF\n`define CSR_SSCRATCH      12'h140\n`define CSR_SSCRATCH_MASK 32'hFFFFFFFF\n`define CSR_SEPC          12'h141\n`define CSR_SEPC_MASK     32'hFFFFFFFF\n`define CSR_SCAUSE        12'h142\n`define CSR_SCAUSE_MASK   32'h8000000F\n`define CSR_STVAL         12'h143\n`define CSR_STVAL_MASK    32'hFFFFFFFF\n`define CSR_SIP           12'h144\n`define CSR_SIP_MASK      ((1 << `IRQ_S_EXT) | (1 << `IRQ_S_TIMER) | (1 << `IRQ_S_SOFT))\n`define CSR_SATP          12'h180\n`define CSR_SATP_MASK     32'hFFFFFFFF\n\n//--------------------------------------------------------------------\n// CSR Registers - DCACHE control\n//--------------------------------------------------------------------\n`define CSR_DFLUSH            12'h3a0 // pmpcfg0\n`define CSR_DFLUSH_MASK       32'hFFFFFFFF\n`define CSR_DWRITEBACK        12'h3a1 // pmpcfg1\n`define CSR_DWRITEBACK_MASK   32'hFFFFFFFF\n`define CSR_DINVALIDATE       12'h3a2 // pmpcfg2\n`define CSR_DINVALIDATE_MASK  32'hFFFFFFFF\n\n//--------------------------------------------------------------------\n// Status Register\n//--------------------------------------------------------------------\n`define SR_UIE         (1 << 0)\n`define SR_UIE_R       0\n`define SR_SIE         (1 << 1)\n`define SR_SIE_R       1\n`define SR_MIE         (1 << 3)\n`define SR_MIE_R       3\n`define SR_UPIE        (1 << 4)\n`define SR_UPIE_R      4\n`define SR_SPIE        (1 << 5)\n`define SR_SPIE_R      5\n`define SR_MPIE        (1 << 7)\n`define SR_MPIE_R      7\n`define SR_SPP         (1 << 8)\n`define SR_SPP_R       8\n\n`define SR_MPP_SHIFT   11\n`define SR_MPP_MASK    2'h3\n`define SR_MPP_R       12:11\n`define SR_MPP_U       `PRIV_USER\n`define SR_MPP_S       `PRIV_SUPER\n`define SR_MPP_M       `PRIV_MACHINE\n\n`define SR_SUM_R        18\n`define SR_SUM          (1 << `SR_SUM_R)\n\n`define SR_MPRV_R       17\n`define SR_MPRV         (1 << `SR_MPRV_R)\n\n`define SR_MXR_R        19\n`define SR_MXR          (1 << `SR_MXR_R)\n\n`define SR_SMODE_MASK   (`SR_UIE | `SR_SIE | `SR_UPIE | `SR_SPIE | `SR_SPP | `SR_SUM)\n\n//--------------------------------------------------------------------\n// SATP definitions\n//--------------------------------------------------------------------\n`define SATP_PPN_R        19:0 // TODO: Should be 21??\n`define SATP_ASID_R       30:22\n`define SATP_MODE_R       31\n\n//--------------------------------------------------------------------\n// MMU Defs (SV32)\n//--------------------------------------------------------------------\n`define MMU_LEVELS        2\n`define MMU_PTIDXBITS     10\n`define MMU_PTESIZE       4\n`define MMU_PGSHIFT       (`MMU_PTIDXBITS + 2)\n`define MMU_PGSIZE        (1 << `MMU_PGSHIFT)\n`define MMU_VPN_BITS      (`MMU_PTIDXBITS * `MMU_LEVELS)\n`define MMU_PPN_BITS      (32 - `MMU_PGSHIFT)\n`define MMU_VA_BITS       (`MMU_VPN_BITS + `MMU_PGSHIFT)\n\n`define PAGE_PRESENT      0\n`define PAGE_READ         1\n`define PAGE_WRITE        2\n`define PAGE_EXEC         3\n`define PAGE_USER         4\n`define PAGE_GLOBAL       5\n`define PAGE_ACCESSED     6\n`define PAGE_DIRTY        7\n`define PAGE_SOFT         9:8\n\n`define PAGE_FLAGS       10'h3FF\n\n`define PAGE_PFN_SHIFT   10\n`define PAGE_SIZE        4096\n\n//--------------------------------------------------------------------\n// Exception Causes\n//--------------------------------------------------------------------\n`define EXCEPTION_W                        6\n`define EXCEPTION_MISALIGNED_FETCH         6'h10\n`define EXCEPTION_FAULT_FETCH              6'h11\n`define EXCEPTION_ILLEGAL_INSTRUCTION      6'h12\n`define EXCEPTION_BREAKPOINT               6'h13\n`define EXCEPTION_MISALIGNED_LOAD          6'h14\n`define EXCEPTION_FAULT_LOAD               6'h15\n`define EXCEPTION_MISALIGNED_STORE         6'h16\n`define EXCEPTION_FAULT_STORE              6'h17\n`define EXCEPTION_ECALL                    6'h18\n`define EXCEPTION_ECALL_U                  6'h18\n`define EXCEPTION_ECALL_S                  6'h19\n`define EXCEPTION_ECALL_H                  6'h1a\n`define EXCEPTION_ECALL_M                  6'h1b\n`define EXCEPTION_PAGE_FAULT_INST          6'h1c\n`define EXCEPTION_PAGE_FAULT_LOAD          6'h1d\n`define EXCEPTION_PAGE_FAULT_STORE         6'h1f\n`define EXCEPTION_EXCEPTION                6'h10\n`define EXCEPTION_INTERRUPT                6'h20\n`define EXCEPTION_ERET_U                   6'h30\n`define EXCEPTION_ERET_S                   6'h31\n`define EXCEPTION_ERET_H                   6'h32\n`define EXCEPTION_ERET_M                   6'h33\n`define EXCEPTION_FENCE                    6'h34\n`define EXCEPTION_TYPE_MASK                6'h30\n`define EXCEPTION_SUBTYPE_R                3:0\n\n`define MCAUSE_INT                      31\n`define MCAUSE_MISALIGNED_FETCH         ((0 << `MCAUSE_INT) | 0)\n`define MCAUSE_FAULT_FETCH              ((0 << `MCAUSE_INT) | 1)\n`define MCAUSE_ILLEGAL_INSTRUCTION      ((0 << `MCAUSE_INT) | 2)\n`define MCAUSE_BREAKPOINT               ((0 << `MCAUSE_INT) | 3)\n`define MCAUSE_MISALIGNED_LOAD          ((0 << `MCAUSE_INT) | 4)\n`define MCAUSE_FAULT_LOAD               ((0 << `MCAUSE_INT) | 5)\n`define MCAUSE_MISALIGNED_STORE         ((0 << `MCAUSE_INT) | 6)\n`define MCAUSE_FAULT_STORE              ((0 << `MCAUSE_INT) | 7)\n`define MCAUSE_ECALL_U                  ((0 << `MCAUSE_INT) | 8)\n`define MCAUSE_ECALL_S                  ((0 << `MCAUSE_INT) | 9)\n`define MCAUSE_ECALL_H                  ((0 << `MCAUSE_INT) | 10)\n`define MCAUSE_ECALL_M                  ((0 << `MCAUSE_INT) | 11)\n`define MCAUSE_PAGE_FAULT_INST          ((0 << `MCAUSE_INT) | 12)\n`define MCAUSE_PAGE_FAULT_LOAD          ((0 << `MCAUSE_INT) | 13)\n`define MCAUSE_PAGE_FAULT_STORE         ((0 << `MCAUSE_INT) | 15)\n`define MCAUSE_INTERRUPT                (1 << `MCAUSE_INT)\n\n//--------------------------------------------------------------------\n// Debug\n//--------------------------------------------------------------------\n`define RISCV_REGNO_FIRST   13'd0\n`define RISCV_REGNO_GPR0    13'd0\n`define RISCV_REGNO_GPR31   13'd31\n`define RISCV_REGNO_PC      13'd32\n`define RISCV_REGNO_CSR0    13'd65\n`define RISCV_REGNO_CSR4095 (`RISCV_REGNO_CSR0 +  13'd4095)\n`define RISCV_REGNO_PRIV    13'd4161\n"}