{"question": "/* Generated by Yosys 0.53 (git sha1 53c22ab7c, g++ 12.2.1 -fPIC -O3) */\\n\\n(* src = \\\"../riscv/core/riscv/riscv_decoder.v:43.1-236.10\\\" *)\\nmodule riscv_decoder(valid_i, fetch_fault_i, enable_muldiv_i, opcode_i, invalid_o, exec_o, lsu_o, branch_o, mul_o, div_o, csr_o, rd_valid_o);\\n  wire _000_;\\n  wire _001_;\\n  wire _002_;\\n  wire _003_;\\n  wire _004_;\\n  wire _005_;\\n  wire _006_;\\n  wire _007_;\\n  wire _008_;\\n  wire _009_;\\n  wire _010_;\\n  wire _011_;\\n  wire _012_;\\n  wire _013_;\\n  wire _014_;\\n  wire _015_;\\n  wire _016_;\\n  wire _017_;\\n  wire _018_;\\n  wire _019_;\\n  wire _020_;\\n  wire _021_;\\n  wire _022_;\\n  wire _023_;\\n  wire _024_;\\n  wire _025_;\\n  wire _026_;\\n  wire _027_;\\n  wire _028_;\\n  wire _029_;\\n  wire _030_;\\n  wire _031_;\\n  wire _032_;\\n  wire _033_;\\n  wire _034_;\\n  wire _035_;\\n  wire _036_;\\n  wire _037_;\\n  wire _038_;\\n  wire _039_;\\n  wire _040_;\\n  wire _041_;\\n  wire _042_;\\n  wire _043_;\\n  wire _044_;\\n  wire _045_;\\n  wire _046_;\\n  wire _047_;\\n  wire _048_;\\n  wire _049_;\\n  wire _050_;\\n  wire _051_;\\n  wire _052_;\\n  wire _053_;\\n  wire _054_;\\n  wire _055_;\\n  wire _056_;\\n  wire _057_;\\n  wire _058_;\\n  wire _059_;\\n  wire _060_;\\n  wire _061_;\\n  wire _062_;\\n  wire _063_;\\n  wire _064_;\\n  wire _065_;\\n  wire _066_;\\n  wire _067_;\\n  wire _068_;\\n  wire _069_;\\n  wire _070_;\\n  wire _071_;\\n  wire _072_;\\n  wire _073_;\\n  wire _074_;\\n  wire _075_;\\n  wire _076_;\\n  wire _077_;\\n  wire _078_;\\n  wire _079_;\\n  wire _080_;\\n  wire _081_;\\n  wire _082_;\\n  wire _083_;\\n  wire _084_;\\n  wire _085_;\\n  wire _086_;\\n  wire _087_;\\n  wire _088_;\\n  wire _089_;\\n  wire _090_;\\n  wire _091_;\\n  wire _092_;\\n  wire _093_;\\n  wire _094_;\\n  wire _095_;\\n  wire _096_;\\n  wire _097_;\\n  wire _098_;\\n  wire _099_;\\n  wire _100_;\\n  wire _101_;\\n  wire _102_;\\n  wire _103_;\\n  wire _104_;\\n  wire _105_;\\n  wire _106_;\\n  wire _107_;\\n  wire _108_;\\n  wire _109_;\\n  wire _110_;\\n  wire _111_;\\n  wire _112_;\\n  wire _113_;\\n  wire _114_;\\n  wire _115_;\\n  wire _116_;\\n  wire _117_;\\n  wire _118_;\\n  wire _119_;\\n  wire _120_;\\n  wire _121_;\\n  wire _122_;\\n  wire _123_;\\n  wire _124_;\\n  wire _125_;\\n  wire _126_;\\n  wire _127_;\\n  wire _128_;\\n  wire _129_;\\n  wire _130_;\\n  wire _131_;\\n  wire _132_;\\n  wire _133_;\\n  wire _134_;\\n  wire _135_;\\n  wire _136_;\\n  wire _137_;\\n  wire _138_;\\n  wire _139_;\\n  wire _140_;\\n  wire _141_;\\n  wire _142_;\\n  wire _143_;\\n  wire _144_;\\n  wire _145_;\\n  wire _146_;\\n  wire _147_;\\n  wire _148_;\\n  wire _149_;\\n  wire _150_;\\n  wire _151_;\\n  wire _152_;\\n  wire _153_;\\n  wire _154_;\\n  wire _155_;\\n  wire _156_;\\n  wire _157_;\\n  wire _158_;\\n  wire _159_;\\n  wire _160_;\\n  wire _161_;\\n  wire _162_;\\n  wire _163_;\\n  wire _164_;\\n  wire _165_;\\n  wire _166_;\\n  wire _167_;\\n  wire _168_;\\n  wire _169_;\\n  wire _170_;\\n  wire _171_;\\n  wire _172_;\\n  wire _173_;\\n  wire _174_;\\n  wire _175_;\\n  wire _176_;\\n  wire _177_;\\n  wire _178_;\\n  wire _179_;\\n  wire _180_;\\n  wire _181_;\\n  wire _182_;\\n  wire _183_;\\n  wire _184_;\\n  wire _185_;\\n  wire _186_;\\n  wire _187_;\\n  wire _188_;\\n  wire _189_;\\n  wire _190_;\\n  wire _191_;\\n  wire _192_;\\n  wire _193_;\\n  wire _194_;\\n  wire _195_;\\n  wire _196_;\\n  wire _197_;\\n  wire _198_;\\n  wire _199_;\\n  wire _200_;\\n  wire _201_;\\n  wire _202_;\\n  wire _203_;\\n  wire _204_;\\n  wire _205_;\\n  wire _206_;\\n  wire _207_;\\n  wire _208_;\\n  wire _209_;\\n  wire _210_;\\n  wire _211_;\\n  wire _212_;\\n  wire _213_;\\n  wire _214_;\\n  wire _215_;\\n  wire _216_;\\n  wire _217_;\\n  wire _218_;\\n  wire _219_;\\n  wire _220_;\\n  wire _221_;\\n  wire _222_;\\n  wire _223_;\\n  wire _224_;\\n  wire _225_;\\n  wire _226_;\\n  wire _227_;\\n  wire _228_;\\n  wire _229_;\\n  wire _230_;\\n  wire _231_;\\n  wire _232_;\\n  wire _233_;\\n  wire _234_;\\n  wire _235_;\\n  wire _236_;\\n  wire _237_;\\n  wire _238_;\\n  wire _239_;\\n  wire _240_;\\n  wire _241_;\\n  wire _242_;\\n  wire _243_;\\n  wire _244_;\\n  wire _245_;\\n  wire _246_;\\n  wire _247_;\\n  wire _248_;\\n  wire _249_;\\n  wire _250_;\\n  wire _251_;\\n  wire _252_;\\n  wire _253_;\\n  wire _254_;\\n  wire _255_;\\n  wire _256_;\\n  wire _257_;\\n  wire _258_;\\n  wire _259_;\\n  wire _260_;\\n  wire _261_;\\n  wire _262_;\\n  wire _263_;\\n  wire _264_;\\n  wire _265_;\\n  wire _266_;\\n  wire _267_;\\n  wire _268_;\\n  wire _269_;\\n  wire _270_;\\n  wire _271_;\\n  wire _272_;\\n  wire _273_;\\n  wire _274_;\\n  wire _275_;\\n  wire _276_;\\n  wire _277_;\\n  wire _278_;\\n  wire _279_;\\n  wire _280_;\\n  wire _281_;\\n  wire _282_;\\n  wire _283_;\\n  wire _284_;\\n  wire _285_;\\n  wire _286_;\\n  wire _287_;\\n  wire _288_;\\n  wire _289_;\\n  wire _290_;\\n  wire _291_;\\n  wire _292_;\\n  wire _293_;\\n  wire _294_;\\n  wire _295_;\\n  wire _296_;\\n  wire _297_;\\n  wire _298_;\\n  wire _299_;\\n  wire _300_;\\n  wire _301_;\\n  wire _302_;\\n  wire _303_;\\n  wire _304_;\\n  wire _305_;\\n  wire _306_;\\n  wire _307_;\\n  wire _308_;\\n  wire _309_;\\n  wire _310_;\\n  wire _311_;\\n  wire _312_;\\n  wire _313_;\\n  wire _314_;\\n  wire _315_;\\n  wire _316_;\\n  wire _317_;\\n  wire _318_;\\n  wire _319_;\\n  wire _320_;\\n  wire _321_;\\n  wire _322_;\\n  wire _323_;\\n  wire _324_;\\n  wire _325_;\\n  wire _326_;\\n  wire _327_;\\n  wire _328_;\\n  wire _329_;\\n  wire _330_;\\n  wire _331_;\\n  wire _332_;\\n  wire _333_;\\n  wire _334_;\\n  wire _335_;\\n  wire _336_;\\n  wire _337_;\\n  wire _338_;\\n  wire _339_;\\n  wire _340_;\\n  wire _341_;\\n  wire _342_;\\n  wire _343_;\\n  wire _344_;\\n  wire _345_;\\n  wire _346_;\\n  wire _347_;\\n  wire _348_;\\n  wire _349_;\\n  wire _350_;\\n  wire _351_;\\n  wire _352_;\\n  wire _353_;\\n  wire _354_;\\n  wire _355_;\\n  (* src = \\\"../riscv/core/riscv/riscv_decoder.v:53.35-53.43\\\" *)\\n  output branch_o;\\n  wire branch_o;\\n  (* src = \\\"../riscv/core/riscv/riscv_decoder.v:56.35-56.40\\\" *)\\n  output csr_o;\\n  wire csr_o;\\n  (* src = \\\"../riscv/core/riscv/riscv_decoder.v:55.35-55.40\\\" *)\\n  output div_o;\\n  wire div_o;\\n  (* src = \\\"../riscv/core/riscv/riscv_decoder.v:47.35-47.50\\\" *)\\n  input enable_muldiv_i;\\n  wire enable_muldiv_i;\\n  (* src = \\\"../riscv/core/riscv/riscv_decoder.v:51.35-51.41\\\" *)\\n  output exec_o;\\n  wire exec_o;\\n  (* src = \\\"../riscv/core/riscv/riscv_decoder.v:46.35-46.48\\\" *)\\n  input fetch_fault_i;\\n  wire fetch_fault_i;\\n  (* src = \\\"../riscv/core/riscv/riscv_decoder.v:50.35-50.44\\\" *)\\n  output invalid_o;\\n  wire invalid_o;\\n  (* src = \\\"../riscv/core/riscv/riscv_decoder.v:61.6-61.15\\\" *)\\n  wire invalid_w;\\n  (* src = \\\"../riscv/core/riscv/riscv_decoder.v:52.35-52.40\\\" *)\\n  output lsu_o;\\n  wire lsu_o;\\n  (* src = \\\"../riscv/core/riscv/riscv_decoder.v:54.35-54.40\\\" *)\\n  output mul_o;\\n  wire mul_o;\\n  (* src = \\\"../riscv/core/riscv/riscv_decoder.v:48.35-48.43\\\" *)\\n  input [31:0] opcode_i;\\n  wire [31:0] opcode_i;\\n  (* src = \\\"../riscv/core/riscv/riscv_decoder.v:57.35-57.45\\\" *)\\n  output rd_valid_o;\\n  wire rd_valid_o;\\n  (* src = \\\"../riscv/core/riscv/riscv_decoder.v:45.35-45.42\\\" *)\\n  input valid_i;\\n  wire valid_i;\\n  assign _300_ = ~(opcode_i[1] & opcode_i[0]);\\n  assign _301_ = opcode_i[3] | opcode_i[2];\\n  assign _302_ = _301_ | _300_;\\n  assign _303_ = opcode_i[5] | ~(opcode_i[4]);\\n  assign _304_ = opcode_i[6] | ~(opcode_i[12]);\\n  assign _305_ = _304_ | _303_;\\n  assign _306_ = ~(_305_ | _302_);\\n  assign _307_ = ~(opcode_i[14] & opcode_i[13]);\\n  assign _308_ = _306_ & ~(_307_);\\n  assign _309_ = opcode_i[6] | opcode_i[12];\\n  assign _310_ = _309_ | _303_;\\n  assign _311_ = ~(_310_ | _302_);\\n  assign _312_ = ~(opcode_i[14] | opcode_i[13]);\\n  assign _313_ = _312_ & _311_;\\n  assign _314_ = _313_ | _308_;\\n  assign _315_ = opcode_i[14] | ~(opcode_i[13]);\\n  assign _316_ = _311_ & ~(_315_);\\n  assign _317_ = _316_ | _314_;\\n  assign _318_ = _306_ & ~(_315_);\\n  assign _319_ = _318_ | _317_;\\n  assign _320_ = ~_307_;\\n  assign _321_ = _311_ & _320_;\\n  assign _322_ = _321_ | _319_;\\n  assign _323_ = opcode_i[14] & ~(opcode_i[13]);\\n  assign _324_ = _323_ & _311_;\\n  assign _325_ = _324_ | _322_;\\n  assign _326_ = opcode_i[26] | opcode_i[27];\\n  assign _327_ = _326_ | ~(_312_);\\n  assign _328_ = opcode_i[29] | opcode_i[28];\\n  assign _329_ = opcode_i[31] | opcode_i[30];\\n  assign _330_ = _329_ | _328_;\\n  assign _331_ = _330_ | _327_;\\n  assign _332_ = _306_ & ~(_331_);\\n  assign _333_ = _332_ | _325_;\\n  assign _334_ = _326_ | ~(_323_);\\n  assign _335_ = _334_ | _330_;\\n  assign _336_ = _306_ & ~(_335_);\\n  assign _337_ = _336_ | _333_;\\n  assign _338_ = opcode_i[31] | ~(opcode_i[30]);\\n  assign _339_ = _338_ | _328_;\\n  assign _340_ = _339_ | _334_;\\n  assign _341_ = _306_ & ~(_340_);\\n  assign _342_ = _341_ | _337_;\\n  assign _343_ = opcode_i[2] & ~(opcode_i[3]);\\n  assign _344_ = _343_ & ~(_300_);\\n  assign _345_ = ~(opcode_i[5] & opcode_i[4]);\\n  assign _346_ = _345_ | opcode_i[6];\\n  assign _347_ = _344_ & ~(_346_);\\n  assign _348_ = _347_ | _342_;\\n  assign _349_ = _303_ | opcode_i[6];\\n  assign _350_ = _344_ & ~(_349_);\\n  assign _351_ = _350_ | _348_;\\n  assign _352_ = ~opcode_i[31];\\n  assign _353_ = _345_ | _309_;\\n  assign _354_ = _353_ | _302_;\\n  assign _355_ = opcode_i[26] | opcode_i[25];\\n  assign _000_ = _355_ | ~(_312_);\\n  assign _001_ = opcode_i[27] | opcode_i[28];\\n  assign _002_ = opcode_i[29] | opcode_i[30];\\n  assign _003_ = _002_ | _001_;\\n  assign _004_ = _003_ | _000_;\\n  assign _005_ = _004_ | _354_;\\n  assign _006_ = _352_ & ~(_005_);\\n  assign _007_ = _006_ | _351_;\\n  assign _008_ = opcode_i[29] | ~(opcode_i[30]);\\n  assign _009_ = _008_ | _001_;\\n  assign _010_ = _009_ | _000_;\\n  assign _011_ = _010_ | _354_;\\n  assign _012_ = _352_ & ~(_011_);\\n  assign _013_ = _012_ | _007_;\\n  assign _014_ = _355_ | _315_;\\n  assign _015_ = _014_ | _003_;\\n  assign _016_ = _015_ | _354_;\\n  assign _017_ = _352_ & ~(_016_);\\n  assign _018_ = _017_ | _013_;\\n  assign _019_ = _345_ | _304_;\\n  assign _020_ = _019_ | _302_;\\n  assign _021_ = _020_ | _015_;\\n  assign _022_ = _352_ & ~(_021_);\\n  assign _023_ = _022_ | _018_;\\n  assign _024_ = _355_ | ~(_323_);\\n  assign _025_ = _024_ | _003_;\\n  assign _026_ = _025_ | _354_;\\n  assign _027_ = _352_ & ~(_026_);\\n  assign _028_ = _027_ | _023_;\\n  assign _029_ = _355_ | _307_;\\n  assign _030_ = _029_ | _003_;\\n  assign _031_ = _030_ | _354_;\\n  assign _032_ = _352_ & ~(_031_);\\n  assign _033_ = _032_ | _028_;\\n  assign _034_ = _030_ | _020_;\\n  assign _035_ = _352_ & ~(_034_);\\n  assign _036_ = _035_ | _033_;\\n  assign _037_ = _020_ | _004_;\\n  assign _038_ = _352_ & ~(_037_);\\n  assign _039_ = _038_ | _036_;\\n  assign _040_ = _025_ | _020_;\\n  assign _041_ = _352_ & ~(_040_);\\n  assign _042_ = _041_ | _039_;\\n  assign _043_ = _024_ | _009_;\\n  assign _044_ = _043_ | _020_;\\n  assign _045_ = _352_ & ~(_044_);\\n  assign exec_o = _045_ | _042_;\\n  assign _046_ = ~(opcode_i[3] & opcode_i[2]);\\n  assign _047_ = _046_ | _300_;\\n  assign _048_ = opcode_i[4] | ~(opcode_i[5]);\\n  assign _049_ = _048_ | ~(opcode_i[6]);\\n  assign _050_ = ~(_049_ | _047_);\\n  assign _051_ = _050_ | exec_o;\\n  assign _052_ = opcode_i[12] | ~(opcode_i[6]);\\n  assign _053_ = _052_ | _048_;\\n  assign _054_ = _053_ | ~(_344_);\\n  assign _055_ = _312_ & ~(_054_);\\n  assign _056_ = _055_ | _051_;\\n  assign _057_ = _053_ | _302_;\\n  assign _058_ = _312_ & ~(_057_);\\n  assign _059_ = _058_ | _056_;\\n  assign _060_ = ~(opcode_i[6] & opcode_i[12]);\\n  assign _061_ = _060_ | _048_;\\n  assign _062_ = _061_ | _302_;\\n  assign _063_ = _312_ & ~(_062_);\\n  assign _064_ = _063_ | _059_;\\n  assign _065_ = _323_ & ~(_057_);\\n  assign _066_ = _065_ | _064_;\\n  assign _067_ = _323_ & ~(_062_);\\n  assign _068_ = _067_ | _066_;\\n  assign _069_ = _320_ & ~(_057_);\\n  assign _070_ = _069_ | _068_;\\n  assign _071_ = _320_ & ~(_062_);\\n  assign _072_ = _071_ | _070_;\\n  assign _073_ = opcode_i[5] | opcode_i[4];\\n  assign _074_ = _073_ | _309_;\\n  assign _075_ = _074_ | _302_;\\n  assign _076_ = _312_ & ~(_075_);\\n  assign _077_ = _076_ | _072_;\\n  assign _078_ = _073_ | _304_;\\n  assign _079_ = _078_ | _302_;\\n  assign _080_ = _312_ & ~(_079_);\\n  assign _081_ = _080_ | _077_;\\n  assign _082_ = ~_315_;\\n  assign _083_ = _082_ & ~(_075_);\\n  assign _084_ = _083_ | _081_;\\n  assign _085_ = _323_ & ~(_075_);\\n  assign _086_ = _085_ | _084_;\\n  assign _087_ = _323_ & ~(_079_);\\n  assign _088_ = _087_ | _086_;\\n  assign _089_ = _320_ & ~(_075_);\\n  assign _090_ = _089_ | _088_;\\n  assign _091_ = _048_ | _309_;\\n  assign _092_ = _091_ | _302_;\\n  assign _093_ = _312_ & ~(_092_);\\n  assign _094_ = _093_ | _090_;\\n  assign _095_ = _048_ | _304_;\\n  assign _096_ = _095_ | _302_;\\n  assign _097_ = _312_ & ~(_096_);\\n  assign _098_ = _097_ | _094_;\\n  assign _099_ = _082_ & ~(_092_);\\n  assign _100_ = _099_ | _098_;\\n  assign _101_ = opcode_i[7] | ~(opcode_i[6]);\\n  assign _102_ = _101_ | _345_;\\n  assign _103_ = ~(_102_ | _302_);\\n  assign _104_ = opcode_i[9] | opcode_i[8];\\n  assign _105_ = opcode_i[11] | opcode_i[10];\\n  assign _106_ = _105_ | _104_;\\n  assign _107_ = opcode_i[12] | opcode_i[13];\\n  assign _108_ = opcode_i[15] | opcode_i[14];\\n  assign _109_ = _108_ | _107_;\\n  assign _110_ = _109_ | _106_;\\n  assign _111_ = _103_ & ~(_110_);\\n  assign _112_ = opcode_i[17] | opcode_i[16];\\n  assign _113_ = opcode_i[19] | opcode_i[18];\\n  assign _114_ = _113_ | _112_;\\n  assign _115_ = opcode_i[20] | opcode_i[21];\\n  assign _116_ = opcode_i[23] | opcode_i[22];\\n  assign _117_ = _116_ | _115_;\\n  assign _118_ = _117_ | _114_;\\n  assign _119_ = opcode_i[24] | opcode_i[25];\\n  assign _120_ = _119_ | _326_;\\n  assign _121_ = _120_ | _330_;\\n  assign _122_ = _121_ | _118_;\\n  assign _123_ = _111_ & ~(_122_);\\n  assign _124_ = _123_ | _100_;\\n  assign _125_ = opcode_i[21] | ~(opcode_i[20]);\\n  assign _126_ = _125_ | _116_;\\n  assign _127_ = _126_ | _114_;\\n  assign _128_ = _127_ | _121_;\\n  assign _129_ = _111_ & ~(_128_);\\n  assign _130_ = _129_ | _124_;\\n  assign _131_ = opcode_i[20] | ~(opcode_i[21]);\\n  assign _132_ = _131_ | _116_;\\n  assign _133_ = _132_ | _114_;\\n  assign _134_ = _120_ | _329_;\\n  assign _135_ = _134_ | _133_;\\n  assign _136_ = _111_ & ~(_135_);\\n  assign _137_ = _136_ | _130_;\\n  assign _138_ = _060_ | _345_;\\n  assign _139_ = _138_ | _302_;\\n  assign _140_ = _312_ & ~(_139_);\\n  assign _141_ = _140_ | _137_;\\n  assign _142_ = _052_ | _345_;\\n  assign _143_ = _142_ | _302_;\\n  assign _144_ = _082_ & ~(_143_);\\n  assign _145_ = _144_ | _141_;\\n  assign _146_ = _082_ & ~(_139_);\\n  assign _147_ = _146_ | _145_;\\n  assign _148_ = _323_ & ~(_139_);\\n  assign _149_ = _148_ | _147_;\\n  assign _150_ = _320_ & ~(_143_);\\n  assign _151_ = _150_ | _149_;\\n  assign _152_ = _320_ & ~(_139_);\\n  assign _153_ = _152_ | _151_;\\n  assign _154_ = opcode_i[16] | opcode_i[15];\\n  assign _155_ = opcode_i[18] | opcode_i[17];\\n  assign _156_ = _155_ | _154_;\\n  assign _157_ = _156_ | _106_;\\n  assign _158_ = _103_ & ~(_157_);\\n  assign _159_ = opcode_i[19] | ~(opcode_i[20]);\\n  assign _160_ = opcode_i[21] | ~(opcode_i[22]);\\n  assign _161_ = _160_ | _159_;\\n  assign _162_ = opcode_i[24] | opcode_i[23];\\n  assign _163_ = _162_ | _355_;\\n  assign _164_ = _163_ | _161_;\\n  assign _165_ = opcode_i[27] | ~(opcode_i[28]);\\n  assign _166_ = _165_ | _002_;\\n  assign _167_ = _166_ | opcode_i[31];\\n  assign _168_ = _167_ | _164_;\\n  assign _169_ = _158_ & ~(_168_);\\n  assign _170_ = _169_ | _153_;\\n  assign _171_ = _074_ | _047_;\\n  assign _172_ = _312_ & ~(_171_);\\n  assign _173_ = _172_ | _170_;\\n  assign _174_ = _078_ | _047_;\\n  assign _175_ = _312_ & ~(_174_);\\n  assign _176_ = _175_ | _173_;\\n  assign _177_ = opcode_i[14] | ~(opcode_i[25]);\\n  assign _178_ = _177_ | _107_;\\n  assign _179_ = _178_ | _106_;\\n  assign _180_ = _103_ & ~(_179_);\\n  assign _181_ = opcode_i[29] | ~(opcode_i[28]);\\n  assign _182_ = _181_ | _326_;\\n  assign _183_ = _182_ | _329_;\\n  assign _184_ = _180_ & ~(_183_);\\n  assign _185_ = _184_ | _176_;\\n  assign _186_ = ~enable_muldiv_i;\\n  assign _187_ = opcode_i[26] | ~(opcode_i[25]);\\n  assign _188_ = _187_ | ~(_312_);\\n  assign _189_ = _188_ | _003_;\\n  assign _190_ = _189_ | _354_;\\n  assign _191_ = _352_ & ~(_190_);\\n  assign _192_ = _191_ & ~(_186_);\\n  assign _193_ = _192_ | _185_;\\n  assign _194_ = _189_ | _020_;\\n  assign _195_ = _352_ & ~(_194_);\\n  assign _196_ = _195_ & ~(_186_);\\n  assign _197_ = _196_ | _193_;\\n  assign _198_ = _187_ | _315_;\\n  assign _199_ = _198_ | _003_;\\n  assign _200_ = _199_ | _354_;\\n  assign _201_ = _352_ & ~(_200_);\\n  assign _202_ = _201_ & ~(_186_);\\n  assign _203_ = _202_ | _197_;\\n  assign _204_ = _199_ | _020_;\\n  assign _205_ = _204_ | opcode_i[31];\\n  assign _206_ = enable_muldiv_i & ~(_205_);\\n  assign _207_ = _206_ | _203_;\\n  assign _208_ = _187_ | ~(_323_);\\n  assign _209_ = _208_ | _003_;\\n  assign _210_ = _209_ | _354_;\\n  assign _211_ = _352_ & ~(_210_);\\n  assign _212_ = _211_ & ~(_186_);\\n  assign _213_ = _212_ | _207_;\\n  assign _214_ = _209_ | _020_;\\n  assign _215_ = _352_ & ~(_214_);\\n  assign _216_ = _215_ & ~(_186_);\\n  assign _217_ = _216_ | _213_;\\n  assign _218_ = _187_ | _307_;\\n  assign _219_ = _218_ | _003_;\\n  assign _220_ = _219_ | _354_;\\n  assign _221_ = _352_ & ~(_220_);\\n  assign _222_ = _221_ & ~(_186_);\\n  assign _223_ = _222_ | _217_;\\n  assign _224_ = _219_ | _020_;\\n  assign _225_ = _224_ | opcode_i[31];\\n  assign _226_ = enable_muldiv_i & ~(_225_);\\n  assign _227_ = _226_ | _223_;\\n  assign invalid_o = valid_i & ~(_227_);\\n  assign _228_ = _055_ | _050_;\\n  assign _229_ = _228_ | _347_;\\n  assign _230_ = _229_ | _350_;\\n  assign _231_ = _230_ | _313_;\\n  assign _232_ = _231_ | _332_;\\n  assign _233_ = _232_ | _316_;\\n  assign _234_ = _233_ | _318_;\\n  assign _235_ = _234_ | _324_;\\n  assign _236_ = _235_ | _336_;\\n  assign _237_ = _236_ | _341_;\\n  assign _238_ = _237_ | _321_;\\n  assign _239_ = _238_ | _308_;\\n  assign _240_ = _239_ | _006_;\\n  assign _241_ = _240_ | _012_;\\n  assign _242_ = _241_ | _038_;\\n  assign _243_ = _242_ | _017_;\\n  assign _244_ = _243_ | _022_;\\n  assign _245_ = _244_ | _027_;\\n  assign _246_ = _245_ | _041_;\\n  assign _247_ = _246_ | _045_;\\n  assign _248_ = _247_ | _032_;\\n  assign _249_ = _248_ | _035_;\\n  assign _250_ = _249_ | _076_;\\n  assign _251_ = _250_ | _080_;\\n  assign _252_ = _251_ | _083_;\\n  assign _253_ = _252_ | _085_;\\n  assign _254_ = _253_ | _087_;\\n  assign _255_ = _254_ | _089_;\\n  assign _256_ = _255_ | _191_;\\n  assign _257_ = _256_ | _195_;\\n  assign _258_ = _257_ | _201_;\\n  assign _259_ = _258_ | ~(_205_);\\n  assign _260_ = _259_ | _211_;\\n  assign _261_ = _260_ | _215_;\\n  assign _262_ = _261_ | _221_;\\n  assign _263_ = _262_ | ~(_225_);\\n  assign _264_ = _263_ | _140_;\\n  assign _265_ = _264_ | _144_;\\n  assign _266_ = _265_ | _146_;\\n  assign _267_ = _266_ | _148_;\\n  assign _268_ = _267_ | _150_;\\n  assign rd_valid_o = _268_ | _152_;\\n  assign _269_ = _080_ | _076_;\\n  assign _270_ = _269_ | _083_;\\n  assign _271_ = _270_ | _085_;\\n  assign _272_ = _271_ | _087_;\\n  assign _273_ = _272_ | _089_;\\n  assign _274_ = _273_ | _093_;\\n  assign _275_ = _274_ | _097_;\\n  assign lsu_o = _275_ | _099_;\\n  assign _276_ = _228_ | _058_;\\n  assign _277_ = _276_ | _063_;\\n  assign _278_ = _277_ | _065_;\\n  assign _279_ = _278_ | _067_;\\n  assign _280_ = _279_ | _069_;\\n  assign branch_o = _280_ | _071_;\\n  assign _281_ = _195_ | _191_;\\n  assign _282_ = _281_ | _201_;\\n  assign _283_ = _205_ & ~(_282_);\\n  assign mul_o = enable_muldiv_i & ~(_283_);\\n  assign _284_ = _215_ | _211_;\\n  assign _285_ = _284_ | _221_;\\n  assign _286_ = _225_ & ~(_285_);\\n  assign div_o = enable_muldiv_i & ~(_286_);\\n  assign _287_ = _129_ | _123_;\\n  assign _288_ = _287_ | _136_;\\n  assign _289_ = _288_ | _140_;\\n  assign _290_ = _289_ | _144_;\\n  assign _291_ = _290_ | _146_;\\n  assign _292_ = _291_ | _148_;\\n  assign _293_ = _292_ | _150_;\\n  assign _294_ = _293_ | _152_;\\n  assign _295_ = _294_ | _169_;\\n  assign _296_ = _295_ | _172_;\\n  assign _297_ = _296_ | _175_;\\n  assign _298_ = _297_ | _184_;\\n  assign _299_ = _298_ | invalid_o;\\n  assign csr_o = _299_ | fetch_fault_i;\\n  assign invalid_w = invalid_o;\\nendmodule\\n", "answer": "//-----------------------------------------------------------------\n//                         RISC-V Core\n//                            V1.0.1\n//                     Ultra-Embedded.com\n//                     Copyright 2014-2019\n//\n//                   admin@ultra-embedded.com\n//\n//                       License: BSD\n//-----------------------------------------------------------------\n//\n// Copyright (c) 2014-2019, Ultra-Embedded.com\n// All rights reserved.\n// \n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions \n// are met:\n//   - Redistributions of source code must retain the above copyright\n//     notice, this list of conditions and the following disclaimer.\n//   - Redistributions in binary form must reproduce the above copyright\n//     notice, this list of conditions and the following disclaimer \n//     in the documentation and/or other materials provided with the \n//     distribution.\n//   - Neither the name of the author nor the names of its contributors \n//     may be used to endorse or promote products derived from this \n//     software without specific prior written permission.\n// \n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT \n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR \n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE \n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR \n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR \n// BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF \n// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF \n// THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF \n// SUCH DAMAGE.\n//-----------------------------------------------------------------\n`include \"riscv_defs.v\"\n\nmodule riscv_decoder\n(\n     input                        valid_i\n    ,input                        fetch_fault_i\n    ,input                        enable_muldiv_i\n    ,input  [31:0]                opcode_i\n\n    ,output                       invalid_o\n    ,output                       exec_o\n    ,output                       lsu_o\n    ,output                       branch_o\n    ,output                       mul_o\n    ,output                       div_o\n    ,output                       csr_o\n    ,output                       rd_valid_o\n);\n\n// Invalid instruction\nwire invalid_w =    valid_i && \n                   ~(((opcode_i & `INST_ANDI_MASK) == `INST_ANDI)             ||\n                    ((opcode_i & `INST_ADDI_MASK) == `INST_ADDI)              ||\n                    ((opcode_i & `INST_SLTI_MASK) == `INST_SLTI)              ||\n                    ((opcode_i & `INST_SLTIU_MASK) == `INST_SLTIU)            ||\n                    ((opcode_i & `INST_ORI_MASK) == `INST_ORI)                ||\n                    ((opcode_i & `INST_XORI_MASK) == `INST_XORI)              ||\n                    ((opcode_i & `INST_SLLI_MASK) == `INST_SLLI)              ||\n                    ((opcode_i & `INST_SRLI_MASK) == `INST_SRLI)              ||\n                    ((opcode_i & `INST_SRAI_MASK) == `INST_SRAI)              ||\n                    ((opcode_i & `INST_LUI_MASK) == `INST_LUI)                ||\n                    ((opcode_i & `INST_AUIPC_MASK) == `INST_AUIPC)            ||\n                    ((opcode_i & `INST_ADD_MASK) == `INST_ADD)                ||\n                    ((opcode_i & `INST_SUB_MASK) == `INST_SUB)                ||\n                    ((opcode_i & `INST_SLT_MASK) == `INST_SLT)                ||\n                    ((opcode_i & `INST_SLTU_MASK) == `INST_SLTU)              ||\n                    ((opcode_i & `INST_XOR_MASK) == `INST_XOR)                ||\n                    ((opcode_i & `INST_OR_MASK) == `INST_OR)                  ||\n                    ((opcode_i & `INST_AND_MASK) == `INST_AND)                ||\n                    ((opcode_i & `INST_SLL_MASK) == `INST_SLL)                ||\n                    ((opcode_i & `INST_SRL_MASK) == `INST_SRL)                ||\n                    ((opcode_i & `INST_SRA_MASK) == `INST_SRA)                ||\n                    ((opcode_i & `INST_JAL_MASK) == `INST_JAL)                ||\n                    ((opcode_i & `INST_JALR_MASK) == `INST_JALR)              ||\n                    ((opcode_i & `INST_BEQ_MASK) == `INST_BEQ)                ||\n                    ((opcode_i & `INST_BNE_MASK) == `INST_BNE)                ||\n                    ((opcode_i & `INST_BLT_MASK) == `INST_BLT)                ||\n                    ((opcode_i & `INST_BGE_MASK) == `INST_BGE)                ||\n                    ((opcode_i & `INST_BLTU_MASK) == `INST_BLTU)              ||\n                    ((opcode_i & `INST_BGEU_MASK) == `INST_BGEU)              ||\n                    ((opcode_i & `INST_LB_MASK) == `INST_LB)                  ||\n                    ((opcode_i & `INST_LH_MASK) == `INST_LH)                  ||\n                    ((opcode_i & `INST_LW_MASK) == `INST_LW)                  ||\n                    ((opcode_i & `INST_LBU_MASK) == `INST_LBU)                ||\n                    ((opcode_i & `INST_LHU_MASK) == `INST_LHU)                ||\n                    ((opcode_i & `INST_LWU_MASK) == `INST_LWU)                ||\n                    ((opcode_i & `INST_SB_MASK) == `INST_SB)                  ||\n                    ((opcode_i & `INST_SH_MASK) == `INST_SH)                  ||\n                    ((opcode_i & `INST_SW_MASK) == `INST_SW)                  ||\n                    ((opcode_i & `INST_ECALL_MASK) == `INST_ECALL)            ||\n                    ((opcode_i & `INST_EBREAK_MASK) == `INST_EBREAK)          ||\n                    ((opcode_i & `INST_ERET_MASK) == `INST_ERET)              ||\n                    ((opcode_i & `INST_CSRRW_MASK) == `INST_CSRRW)            ||\n                    ((opcode_i & `INST_CSRRS_MASK) == `INST_CSRRS)            ||\n                    ((opcode_i & `INST_CSRRC_MASK) == `INST_CSRRC)            ||\n                    ((opcode_i & `INST_CSRRWI_MASK) == `INST_CSRRWI)          ||\n                    ((opcode_i & `INST_CSRRSI_MASK) == `INST_CSRRSI)          ||\n                    ((opcode_i & `INST_CSRRCI_MASK) == `INST_CSRRCI)          ||\n                    ((opcode_i & `INST_WFI_MASK) == `INST_WFI)                ||\n                    ((opcode_i & `INST_FENCE_MASK) == `INST_FENCE)            ||\n                    ((opcode_i & `INST_IFENCE_MASK) == `INST_IFENCE)          ||\n                    ((opcode_i & `INST_SFENCE_MASK) == `INST_SFENCE)          ||\n                    (enable_muldiv_i && (opcode_i & `INST_MUL_MASK) == `INST_MUL)       ||\n                    (enable_muldiv_i && (opcode_i & `INST_MULH_MASK) == `INST_MULH)     ||\n                    (enable_muldiv_i && (opcode_i & `INST_MULHSU_MASK) == `INST_MULHSU) ||\n                    (enable_muldiv_i && (opcode_i & `INST_MULHU_MASK) == `INST_MULHU)   ||\n                    (enable_muldiv_i && (opcode_i & `INST_DIV_MASK) == `INST_DIV)       ||\n                    (enable_muldiv_i && (opcode_i & `INST_DIVU_MASK) == `INST_DIVU)     ||\n                    (enable_muldiv_i && (opcode_i & `INST_REM_MASK) == `INST_REM)       ||\n                    (enable_muldiv_i && (opcode_i & `INST_REMU_MASK) == `INST_REMU));\n\nassign invalid_o = invalid_w;\n\nassign rd_valid_o = ((opcode_i & `INST_JALR_MASK) == `INST_JALR)     ||\n                    ((opcode_i & `INST_JAL_MASK) == `INST_JAL)       ||\n                    ((opcode_i & `INST_LUI_MASK) == `INST_LUI)       ||\n                    ((opcode_i & `INST_AUIPC_MASK) == `INST_AUIPC)   ||\n                    ((opcode_i & `INST_ADDI_MASK) == `INST_ADDI)     ||\n                    ((opcode_i & `INST_SLLI_MASK) == `INST_SLLI)     ||\n                    ((opcode_i & `INST_SLTI_MASK) == `INST_SLTI)     ||\n                    ((opcode_i & `INST_SLTIU_MASK) == `INST_SLTIU)   ||\n                    ((opcode_i & `INST_XORI_MASK) == `INST_XORI)     ||\n                    ((opcode_i & `INST_SRLI_MASK) == `INST_SRLI)     ||\n                    ((opcode_i & `INST_SRAI_MASK) == `INST_SRAI)     ||\n                    ((opcode_i & `INST_ORI_MASK) == `INST_ORI)       ||\n                    ((opcode_i & `INST_ANDI_MASK) == `INST_ANDI)     ||\n                    ((opcode_i & `INST_ADD_MASK) == `INST_ADD)       ||\n                    ((opcode_i & `INST_SUB_MASK) == `INST_SUB)       ||\n                    ((opcode_i & `INST_SLL_MASK) == `INST_SLL)       ||\n                    ((opcode_i & `INST_SLT_MASK) == `INST_SLT)       ||\n                    ((opcode_i & `INST_SLTU_MASK) == `INST_SLTU)     ||\n                    ((opcode_i & `INST_XOR_MASK) == `INST_XOR)       ||\n                    ((opcode_i & `INST_SRL_MASK) == `INST_SRL)       ||\n                    ((opcode_i & `INST_SRA_MASK) == `INST_SRA)       ||\n                    ((opcode_i & `INST_OR_MASK) == `INST_OR)         ||\n                    ((opcode_i & `INST_AND_MASK) == `INST_AND)       ||\n                    ((opcode_i & `INST_LB_MASK) == `INST_LB)         ||\n                    ((opcode_i & `INST_LH_MASK) == `INST_LH)         ||\n                    ((opcode_i & `INST_LW_MASK) == `INST_LW)         ||\n                    ((opcode_i & `INST_LBU_MASK) == `INST_LBU)       ||\n                    ((opcode_i & `INST_LHU_MASK) == `INST_LHU)       ||\n                    ((opcode_i & `INST_LWU_MASK) == `INST_LWU)       ||\n                    ((opcode_i & `INST_MUL_MASK) == `INST_MUL)       ||\n                    ((opcode_i & `INST_MULH_MASK) == `INST_MULH)     ||\n                    ((opcode_i & `INST_MULHSU_MASK) == `INST_MULHSU) ||\n                    ((opcode_i & `INST_MULHU_MASK) == `INST_MULHU)   ||\n                    ((opcode_i & `INST_DIV_MASK) == `INST_DIV)       ||\n                    ((opcode_i & `INST_DIVU_MASK) == `INST_DIVU)     ||\n                    ((opcode_i & `INST_REM_MASK) == `INST_REM)       ||\n                    ((opcode_i & `INST_REMU_MASK) == `INST_REMU)     ||\n                    ((opcode_i & `INST_CSRRW_MASK) == `INST_CSRRW)   ||\n                    ((opcode_i & `INST_CSRRS_MASK) == `INST_CSRRS)   ||\n                    ((opcode_i & `INST_CSRRC_MASK) == `INST_CSRRC)   ||\n                    ((opcode_i & `INST_CSRRWI_MASK) == `INST_CSRRWI) ||\n                    ((opcode_i & `INST_CSRRSI_MASK) == `INST_CSRRSI) ||\n                    ((opcode_i & `INST_CSRRCI_MASK) == `INST_CSRRCI);\n\nassign exec_o =     ((opcode_i & `INST_ANDI_MASK) == `INST_ANDI)  ||\n                    ((opcode_i & `INST_ADDI_MASK) == `INST_ADDI)  ||\n                    ((opcode_i & `INST_SLTI_MASK) == `INST_SLTI)  ||\n                    ((opcode_i & `INST_SLTIU_MASK) == `INST_SLTIU)||\n                    ((opcode_i & `INST_ORI_MASK) == `INST_ORI)    ||\n                    ((opcode_i & `INST_XORI_MASK) == `INST_XORI)  ||\n                    ((opcode_i & `INST_SLLI_MASK) == `INST_SLLI)  ||\n                    ((opcode_i & `INST_SRLI_MASK) == `INST_SRLI)  ||\n                    ((opcode_i & `INST_SRAI_MASK) == `INST_SRAI)  ||\n                    ((opcode_i & `INST_LUI_MASK) == `INST_LUI)    ||\n                    ((opcode_i & `INST_AUIPC_MASK) == `INST_AUIPC)||\n                    ((opcode_i & `INST_ADD_MASK) == `INST_ADD)    ||\n                    ((opcode_i & `INST_SUB_MASK) == `INST_SUB)    ||\n                    ((opcode_i & `INST_SLT_MASK) == `INST_SLT)    ||\n                    ((opcode_i & `INST_SLTU_MASK) == `INST_SLTU)  ||\n                    ((opcode_i & `INST_XOR_MASK) == `INST_XOR)    ||\n                    ((opcode_i & `INST_OR_MASK) == `INST_OR)      ||\n                    ((opcode_i & `INST_AND_MASK) == `INST_AND)    ||\n                    ((opcode_i & `INST_SLL_MASK) == `INST_SLL)    ||\n                    ((opcode_i & `INST_SRL_MASK) == `INST_SRL)    ||\n                    ((opcode_i & `INST_SRA_MASK) == `INST_SRA);\n\nassign lsu_o =      ((opcode_i & `INST_LB_MASK) == `INST_LB)   ||\n                    ((opcode_i & `INST_LH_MASK) == `INST_LH)   ||\n                    ((opcode_i & `INST_LW_MASK) == `INST_LW)   ||\n                    ((opcode_i & `INST_LBU_MASK) == `INST_LBU) ||\n                    ((opcode_i & `INST_LHU_MASK) == `INST_LHU) ||\n                    ((opcode_i & `INST_LWU_MASK) == `INST_LWU) ||\n                    ((opcode_i & `INST_SB_MASK) == `INST_SB)   ||\n                    ((opcode_i & `INST_SH_MASK) == `INST_SH)   ||\n                    ((opcode_i & `INST_SW_MASK) == `INST_SW);\n\nassign branch_o =   ((opcode_i & `INST_JAL_MASK) == `INST_JAL)   ||\n                    ((opcode_i & `INST_JALR_MASK) == `INST_JALR) ||\n                    ((opcode_i & `INST_BEQ_MASK) == `INST_BEQ)   ||\n                    ((opcode_i & `INST_BNE_MASK) == `INST_BNE)   ||\n                    ((opcode_i & `INST_BLT_MASK) == `INST_BLT)   ||\n                    ((opcode_i & `INST_BGE_MASK) == `INST_BGE)   ||\n                    ((opcode_i & `INST_BLTU_MASK) == `INST_BLTU) ||\n                    ((opcode_i & `INST_BGEU_MASK) == `INST_BGEU);\n\nassign mul_o =      enable_muldiv_i &&\n                    (((opcode_i & `INST_MUL_MASK) == `INST_MUL)    ||\n                    ((opcode_i & `INST_MULH_MASK) == `INST_MULH)   ||\n                    ((opcode_i & `INST_MULHSU_MASK) == `INST_MULHSU) ||\n                    ((opcode_i & `INST_MULHU_MASK) == `INST_MULHU));\n\nassign div_o =      enable_muldiv_i &&\n                    (((opcode_i & `INST_DIV_MASK) == `INST_DIV) ||\n                    ((opcode_i & `INST_DIVU_MASK) == `INST_DIVU) ||\n                    ((opcode_i & `INST_REM_MASK) == `INST_REM) ||\n                    ((opcode_i & `INST_REMU_MASK) == `INST_REMU));\n\nassign csr_o =      ((opcode_i & `INST_ECALL_MASK) == `INST_ECALL)            ||\n                    ((opcode_i & `INST_EBREAK_MASK) == `INST_EBREAK)          ||\n                    ((opcode_i & `INST_ERET_MASK) == `INST_ERET)              ||\n                    ((opcode_i & `INST_CSRRW_MASK) == `INST_CSRRW)            ||\n                    ((opcode_i & `INST_CSRRS_MASK) == `INST_CSRRS)            ||\n                    ((opcode_i & `INST_CSRRC_MASK) == `INST_CSRRC)            ||\n                    ((opcode_i & `INST_CSRRWI_MASK) == `INST_CSRRWI)          ||\n                    ((opcode_i & `INST_CSRRSI_MASK) == `INST_CSRRSI)          ||\n                    ((opcode_i & `INST_CSRRCI_MASK) == `INST_CSRRCI)          ||\n                    ((opcode_i & `INST_WFI_MASK) == `INST_WFI)                ||\n                    ((opcode_i & `INST_FENCE_MASK) == `INST_FENCE)            ||\n                    ((opcode_i & `INST_IFENCE_MASK) == `INST_IFENCE)          ||\n                    ((opcode_i & `INST_SFENCE_MASK) == `INST_SFENCE)          ||\n                    invalid_w || fetch_fault_i;\n\nendmodule\n"}