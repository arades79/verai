{"question": "/* Generated by Yosys 0.53 (git sha1 53c22ab7c, clang++ 15.0.0 -fPIC -O3) */\n\n(* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:4.1-89.13\" *)\nmodule fifo(clk, rst, buf_in, buf_out, wr_en, rd_en, buf_empty, buf_full, fifo_counter);\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:62.4-70.10\" *)\n  wire [7:0] _000_;\n  wire [7:0] _001_;\n  wire _002_;\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:35.45-35.64\" *)\n  wire _003_;\n  wire _004_;\n  wire _005_;\n  wire _006_;\n  wire _007_;\n  wire _008_;\n  wire _009_;\n  wire _010_;\n  wire _011_;\n  wire _012_;\n  wire _013_;\n  wire _014_;\n  wire _015_;\n  wire _016_;\n  wire _017_;\n  wire _018_;\n  wire _019_;\n  wire _020_;\n  wire _021_;\n  wire _022_;\n  wire _023_;\n  wire _024_;\n  wire _025_;\n  wire _026_;\n  wire _027_;\n  wire _028_;\n  wire _029_;\n  wire _030_;\n  wire _031_;\n  wire _032_;\n  wire _033_;\n  wire _034_;\n  wire _035_;\n  wire _036_;\n  wire _037_;\n  wire _038_;\n  wire _039_;\n  wire _040_;\n  wire _041_;\n  wire _042_;\n  wire _043_;\n  wire _044_;\n  wire _045_;\n  wire _046_;\n  wire _047_;\n  wire _048_;\n  wire _049_;\n  wire _050_;\n  wire _051_;\n  wire _052_;\n  wire _053_;\n  wire _054_;\n  wire _055_;\n  wire _056_;\n  wire _057_;\n  wire _058_;\n  wire _059_;\n  wire _060_;\n  wire _061_;\n  wire _062_;\n  wire _063_;\n  wire _064_;\n  wire _065_;\n  wire _066_;\n  wire _067_;\n  wire _068_;\n  wire _069_;\n  wire _070_;\n  wire _071_;\n  wire _072_;\n  wire _073_;\n  wire _074_;\n  wire _075_;\n  wire _076_;\n  wire _077_;\n  wire _078_;\n  wire _079_;\n  wire _080_;\n  wire _081_;\n  wire _082_;\n  wire _083_;\n  wire _084_;\n  wire _085_;\n  wire _086_;\n  (* force_downto = 32'd1 *)\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:39.30-39.46|/Users/arades/code/verai/.venv/lib/python3.13/site-packages/pyosys/share/techmap.v:270.23-270.24\" *)\n  (* unused_bits = \"1 2 3\" *)\n  wire [3:0] _087_;\n  (* force_downto = 32'd1 *)\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:39.30-39.46|/Users/arades/code/verai/.venv/lib/python3.13/site-packages/pyosys/share/techmap.v:270.26-270.27\" *)\n  wire [3:0] _088_;\n  (* force_downto = 32'd1 *)\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:81.51-81.61|/Users/arades/code/verai/.venv/lib/python3.13/site-packages/pyosys/share/techmap.v:270.23-270.24\" *)\n  wire [2:0] _089_;\n  (* force_downto = 32'd1 *)\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:81.51-81.61|/Users/arades/code/verai/.venv/lib/python3.13/site-packages/pyosys/share/techmap.v:270.26-270.27\" *)\n  wire [2:0] _090_;\n  (* force_downto = 32'd1 *)\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:84.51-84.61|/Users/arades/code/verai/.venv/lib/python3.13/site-packages/pyosys/share/techmap.v:270.23-270.24\" *)\n  wire [2:0] _091_;\n  (* force_downto = 32'd1 *)\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:84.51-84.61|/Users/arades/code/verai/.venv/lib/python3.13/site-packages/pyosys/share/techmap.v:270.26-270.27\" *)\n  wire [2:0] _092_;\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:12.26-12.35\" *)\n  output buf_empty;\n  wire buf_empty;\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:12.37-12.45\" *)\n  output buf_full;\n  wire buf_full;\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:8.26-8.32\" *)\n  input [7:0] buf_in;\n  wire [7:0] buf_in;\n  reg [7:0] \\buf_mem[0] ;\n  reg [7:0] \\buf_mem[1] ;\n  reg [7:0] \\buf_mem[2] ;\n  reg [7:0] \\buf_mem[3] ;\n  reg [7:0] \\buf_mem[4] ;\n  reg [7:0] \\buf_mem[5] ;\n  reg [7:0] \\buf_mem[6] ;\n  reg [7:0] \\buf_mem[7] ;\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:10.26-10.33\" *)\n  output [7:0] buf_out;\n  reg [7:0] buf_out;\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:6.31-6.34\" *)\n  input clk;\n  wire clk;\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:14.92-14.104\" *)\n  output [3:0] fifo_counter;\n  reg [3:0] fifo_counter;\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:6.43-6.48\" *)\n  input rd_en;\n  wire rd_en;\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:20.92-20.98\" *)\n  reg [2:0] rd_ptr;\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:6.26-6.29\" *)\n  input rst;\n  wire rst;\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:6.36-6.41\" *)\n  input wr_en;\n  wire wr_en;\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:20.100-20.106\" *)\n  reg [2:0] wr_ptr;\n  assign _089_[0] = ~wr_ptr[0];\n  assign _087_[0] = ~fifo_counter[0];\n  assign _091_[0] = ~rd_ptr[0];\n  assign _012_ = ~(fifo_counter[1] | fifo_counter[0]);\n  assign _013_ = fifo_counter[2] | ~(fifo_counter[3]);\n  assign buf_full = _012_ & ~(_013_);\n  assign _000_[7] = wr_en & ~(buf_full);\n  assign _014_ = fifo_counter[2] | fifo_counter[3];\n  assign buf_empty = _012_ & ~(_014_);\n  assign _003_ = rd_en & ~(buf_empty);\n  assign _002_ = _003_ ^ _000_[7];\n  assign _015_ = rd_ptr[0] ? \\buf_mem[1] [0] : \\buf_mem[0] [0];\n  assign _016_ = rd_ptr[0] ? \\buf_mem[3] [0] : \\buf_mem[2] [0];\n  assign _017_ = rd_ptr[1] ? _016_ : _015_;\n  assign _018_ = rd_ptr[0] ? \\buf_mem[5] [0] : \\buf_mem[4] [0];\n  assign _019_ = rd_ptr[0] ? \\buf_mem[7] [0] : \\buf_mem[6] [0];\n  assign _020_ = rd_ptr[1] ? _019_ : _018_;\n  assign _001_[0] = rd_ptr[2] ? _020_ : _017_;\n  assign _021_ = rd_ptr[0] ? \\buf_mem[1] [1] : \\buf_mem[0] [1];\n  assign _022_ = rd_ptr[0] ? \\buf_mem[3] [1] : \\buf_mem[2] [1];\n  assign _023_ = rd_ptr[1] ? _022_ : _021_;\n  assign _024_ = rd_ptr[0] ? \\buf_mem[5] [1] : \\buf_mem[4] [1];\n  assign _025_ = rd_ptr[0] ? \\buf_mem[7] [1] : \\buf_mem[6] [1];\n  assign _026_ = rd_ptr[1] ? _025_ : _024_;\n  assign _001_[1] = rd_ptr[2] ? _026_ : _023_;\n  assign _027_ = rd_ptr[0] ? \\buf_mem[1] [2] : \\buf_mem[0] [2];\n  assign _028_ = rd_ptr[0] ? \\buf_mem[3] [2] : \\buf_mem[2] [2];\n  assign _029_ = rd_ptr[1] ? _028_ : _027_;\n  assign _030_ = rd_ptr[0] ? \\buf_mem[5] [2] : \\buf_mem[4] [2];\n  assign _031_ = rd_ptr[0] ? \\buf_mem[7] [2] : \\buf_mem[6] [2];\n  assign _032_ = rd_ptr[1] ? _031_ : _030_;\n  assign _001_[2] = rd_ptr[2] ? _032_ : _029_;\n  assign _033_ = rd_ptr[0] ? \\buf_mem[1] [3] : \\buf_mem[0] [3];\n  assign _034_ = rd_ptr[0] ? \\buf_mem[3] [3] : \\buf_mem[2] [3];\n  assign _035_ = rd_ptr[1] ? _034_ : _033_;\n  assign _036_ = rd_ptr[0] ? \\buf_mem[5] [3] : \\buf_mem[4] [3];\n  assign _037_ = rd_ptr[0] ? \\buf_mem[7] [3] : \\buf_mem[6] [3];\n  assign _038_ = rd_ptr[1] ? _037_ : _036_;\n  assign _001_[3] = rd_ptr[2] ? _038_ : _035_;\n  assign _039_ = rd_ptr[0] ? \\buf_mem[1] [4] : \\buf_mem[0] [4];\n  assign _040_ = rd_ptr[0] ? \\buf_mem[3] [4] : \\buf_mem[2] [4];\n  assign _041_ = rd_ptr[1] ? _040_ : _039_;\n  assign _042_ = rd_ptr[0] ? \\buf_mem[5] [4] : \\buf_mem[4] [4];\n  assign _043_ = rd_ptr[0] ? \\buf_mem[7] [4] : \\buf_mem[6] [4];\n  assign _044_ = rd_ptr[1] ? _043_ : _042_;\n  assign _001_[4] = rd_ptr[2] ? _044_ : _041_;\n  assign _045_ = rd_ptr[0] ? \\buf_mem[1] [5] : \\buf_mem[0] [5];\n  assign _046_ = rd_ptr[0] ? \\buf_mem[3] [5] : \\buf_mem[2] [5];\n  assign _047_ = rd_ptr[1] ? _046_ : _045_;\n  assign _048_ = rd_ptr[0] ? \\buf_mem[5] [5] : \\buf_mem[4] [5];\n  assign _049_ = rd_ptr[0] ? \\buf_mem[7] [5] : \\buf_mem[6] [5];\n  assign _050_ = rd_ptr[1] ? _049_ : _048_;\n  assign _001_[5] = rd_ptr[2] ? _050_ : _047_;\n  assign _051_ = rd_ptr[0] ? \\buf_mem[1] [6] : \\buf_mem[0] [6];\n  assign _052_ = rd_ptr[0] ? \\buf_mem[3] [6] : \\buf_mem[2] [6];\n  assign _053_ = rd_ptr[1] ? _052_ : _051_;\n  assign _054_ = rd_ptr[0] ? \\buf_mem[5] [6] : \\buf_mem[4] [6];\n  assign _055_ = rd_ptr[0] ? \\buf_mem[7] [6] : \\buf_mem[6] [6];\n  assign _056_ = rd_ptr[1] ? _055_ : _054_;\n  assign _001_[6] = rd_ptr[2] ? _056_ : _053_;\n  assign _057_ = rd_ptr[0] ? \\buf_mem[1] [7] : \\buf_mem[0] [7];\n  assign _058_ = rd_ptr[0] ? \\buf_mem[3] [7] : \\buf_mem[2] [7];\n  assign _059_ = rd_ptr[1] ? _058_ : _057_;\n  assign _060_ = rd_ptr[0] ? \\buf_mem[5] [7] : \\buf_mem[4] [7];\n  assign _061_ = rd_ptr[0] ? \\buf_mem[7] [7] : \\buf_mem[6] [7];\n  assign _062_ = rd_ptr[1] ? _061_ : _060_;\n  assign _001_[7] = rd_ptr[2] ? _062_ : _059_;\n  assign _063_ = wr_ptr[2] | ~(wr_ptr[1]);\n  assign _064_ = _063_ | wr_ptr[0];\n  assign _006_ = _000_[7] & ~(_064_);\n  assign _065_ = wr_ptr[1] | ~(wr_ptr[2]);\n  assign _066_ = _065_ | wr_ptr[0];\n  assign _008_ = _000_[7] & ~(_066_);\n  assign _067_ = wr_ptr[2] | wr_ptr[1];\n  assign _068_ = _067_ | _089_[0];\n  assign _005_ = _000_[7] & ~(_068_);\n  assign _069_ = _067_ | wr_ptr[0];\n  assign _004_ = _000_[7] & ~(_069_);\n  assign _070_ = _063_ | _089_[0];\n  assign _007_ = _000_[7] & ~(_070_);\n  assign _071_ = _065_ | _089_[0];\n  assign _009_ = _000_[7] & ~(_071_);\n  assign _072_ = ~(wr_ptr[2] & wr_ptr[1]);\n  assign _073_ = _072_ | wr_ptr[0];\n  assign _010_ = _000_[7] & ~(_073_);\n  assign _074_ = _072_ | _089_[0];\n  assign _011_ = _000_[7] & ~(_074_);\n  assign _090_[1] = wr_ptr[1] ^ wr_ptr[0];\n  assign _075_ = wr_ptr[1] & wr_ptr[0];\n  assign _090_[2] = _075_ ^ wr_ptr[2];\n  assign _076_ = _000_[7] ^ fifo_counter[1];\n  assign _088_[1] = _076_ ^ _087_[0];\n  assign _077_ = ~fifo_counter[2];\n  assign _078_ = _000_[7] ^ _077_;\n  assign _079_ = _000_[7] | ~(fifo_counter[1]);\n  assign _080_ = fifo_counter[0] & ~(_076_);\n  assign _081_ = _079_ & ~(_080_);\n  assign _088_[2] = ~(_081_ ^ _078_);\n  assign _082_ = _000_[7] ^ fifo_counter[3];\n  assign _083_ = _000_[7] | _077_;\n  assign _084_ = _078_ & ~(_081_);\n  assign _085_ = _083_ & ~(_084_);\n  assign _088_[3] = _085_ ^ _082_;\n  assign _092_[1] = rd_ptr[1] ^ rd_ptr[0];\n  assign _086_ = rd_ptr[1] & rd_ptr[0];\n  assign _092_[2] = _086_ ^ rd_ptr[2];\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:30.4-45.10\" *)\n  always @(posedge clk, posedge rst)\n    if (rst) fifo_counter[0] <= 1'h0;\n    else if (_002_) fifo_counter[0] <= _087_[0];\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:30.4-45.10\" *)\n  always @(posedge clk, posedge rst)\n    if (rst) fifo_counter[1] <= 1'h0;\n    else if (_002_) fifo_counter[1] <= _088_[1];\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:30.4-45.10\" *)\n  always @(posedge clk, posedge rst)\n    if (rst) fifo_counter[2] <= 1'h0;\n    else if (_002_) fifo_counter[2] <= _088_[2];\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:30.4-45.10\" *)\n  always @(posedge clk, posedge rst)\n    if (rst) fifo_counter[3] <= 1'h0;\n    else if (_002_) fifo_counter[3] <= _088_[3];\n  always @(posedge clk)\n    if (_005_) \\buf_mem[1] [0] <= buf_in[0];\n  always @(posedge clk)\n    if (_005_) \\buf_mem[1] [1] <= buf_in[1];\n  always @(posedge clk)\n    if (_005_) \\buf_mem[1] [2] <= buf_in[2];\n  always @(posedge clk)\n    if (_005_) \\buf_mem[1] [3] <= buf_in[3];\n  always @(posedge clk)\n    if (_005_) \\buf_mem[1] [4] <= buf_in[4];\n  always @(posedge clk)\n    if (_005_) \\buf_mem[1] [5] <= buf_in[5];\n  always @(posedge clk)\n    if (_005_) \\buf_mem[1] [6] <= buf_in[6];\n  always @(posedge clk)\n    if (_005_) \\buf_mem[1] [7] <= buf_in[7];\n  always @(posedge clk)\n    if (_010_) \\buf_mem[6] [0] <= buf_in[0];\n  always @(posedge clk)\n    if (_010_) \\buf_mem[6] [1] <= buf_in[1];\n  always @(posedge clk)\n    if (_010_) \\buf_mem[6] [2] <= buf_in[2];\n  always @(posedge clk)\n    if (_010_) \\buf_mem[6] [3] <= buf_in[3];\n  always @(posedge clk)\n    if (_010_) \\buf_mem[6] [4] <= buf_in[4];\n  always @(posedge clk)\n    if (_010_) \\buf_mem[6] [5] <= buf_in[5];\n  always @(posedge clk)\n    if (_010_) \\buf_mem[6] [6] <= buf_in[6];\n  always @(posedge clk)\n    if (_010_) \\buf_mem[6] [7] <= buf_in[7];\n  always @(posedge clk)\n    if (_004_) \\buf_mem[0] [0] <= buf_in[0];\n  always @(posedge clk)\n    if (_004_) \\buf_mem[0] [1] <= buf_in[1];\n  always @(posedge clk)\n    if (_004_) \\buf_mem[0] [2] <= buf_in[2];\n  always @(posedge clk)\n    if (_004_) \\buf_mem[0] [3] <= buf_in[3];\n  always @(posedge clk)\n    if (_004_) \\buf_mem[0] [4] <= buf_in[4];\n  always @(posedge clk)\n    if (_004_) \\buf_mem[0] [5] <= buf_in[5];\n  always @(posedge clk)\n    if (_004_) \\buf_mem[0] [6] <= buf_in[6];\n  always @(posedge clk)\n    if (_004_) \\buf_mem[0] [7] <= buf_in[7];\n  always @(posedge clk, posedge rst)\n    if (rst) buf_out[0] <= 1'h0;\n    else if (_003_) buf_out[0] <= _001_[0];\n  always @(posedge clk, posedge rst)\n    if (rst) buf_out[1] <= 1'h0;\n    else if (_003_) buf_out[1] <= _001_[1];\n  always @(posedge clk, posedge rst)\n    if (rst) buf_out[2] <= 1'h0;\n    else if (_003_) buf_out[2] <= _001_[2];\n  always @(posedge clk, posedge rst)\n    if (rst) buf_out[3] <= 1'h0;\n    else if (_003_) buf_out[3] <= _001_[3];\n  always @(posedge clk, posedge rst)\n    if (rst) buf_out[4] <= 1'h0;\n    else if (_003_) buf_out[4] <= _001_[4];\n  always @(posedge clk, posedge rst)\n    if (rst) buf_out[5] <= 1'h0;\n    else if (_003_) buf_out[5] <= _001_[5];\n  always @(posedge clk, posedge rst)\n    if (rst) buf_out[6] <= 1'h0;\n    else if (_003_) buf_out[6] <= _001_[6];\n  always @(posedge clk, posedge rst)\n    if (rst) buf_out[7] <= 1'h0;\n    else if (_003_) buf_out[7] <= _001_[7];\n  always @(posedge clk)\n    if (_007_) \\buf_mem[3] [0] <= buf_in[0];\n  always @(posedge clk)\n    if (_007_) \\buf_mem[3] [1] <= buf_in[1];\n  always @(posedge clk)\n    if (_007_) \\buf_mem[3] [2] <= buf_in[2];\n  always @(posedge clk)\n    if (_007_) \\buf_mem[3] [3] <= buf_in[3];\n  always @(posedge clk)\n    if (_007_) \\buf_mem[3] [4] <= buf_in[4];\n  always @(posedge clk)\n    if (_007_) \\buf_mem[3] [5] <= buf_in[5];\n  always @(posedge clk)\n    if (_007_) \\buf_mem[3] [6] <= buf_in[6];\n  always @(posedge clk)\n    if (_007_) \\buf_mem[3] [7] <= buf_in[7];\n  always @(posedge clk)\n    if (_008_) \\buf_mem[4] [0] <= buf_in[0];\n  always @(posedge clk)\n    if (_008_) \\buf_mem[4] [1] <= buf_in[1];\n  always @(posedge clk)\n    if (_008_) \\buf_mem[4] [2] <= buf_in[2];\n  always @(posedge clk)\n    if (_008_) \\buf_mem[4] [3] <= buf_in[3];\n  always @(posedge clk)\n    if (_008_) \\buf_mem[4] [4] <= buf_in[4];\n  always @(posedge clk)\n    if (_008_) \\buf_mem[4] [5] <= buf_in[5];\n  always @(posedge clk)\n    if (_008_) \\buf_mem[4] [6] <= buf_in[6];\n  always @(posedge clk)\n    if (_008_) \\buf_mem[4] [7] <= buf_in[7];\n  always @(posedge clk)\n    if (_006_) \\buf_mem[2] [0] <= buf_in[0];\n  always @(posedge clk)\n    if (_006_) \\buf_mem[2] [1] <= buf_in[1];\n  always @(posedge clk)\n    if (_006_) \\buf_mem[2] [2] <= buf_in[2];\n  always @(posedge clk)\n    if (_006_) \\buf_mem[2] [3] <= buf_in[3];\n  always @(posedge clk)\n    if (_006_) \\buf_mem[2] [4] <= buf_in[4];\n  always @(posedge clk)\n    if (_006_) \\buf_mem[2] [5] <= buf_in[5];\n  always @(posedge clk)\n    if (_006_) \\buf_mem[2] [6] <= buf_in[6];\n  always @(posedge clk)\n    if (_006_) \\buf_mem[2] [7] <= buf_in[7];\n  always @(posedge clk)\n    if (_011_) \\buf_mem[7] [0] <= buf_in[0];\n  always @(posedge clk)\n    if (_011_) \\buf_mem[7] [1] <= buf_in[1];\n  always @(posedge clk)\n    if (_011_) \\buf_mem[7] [2] <= buf_in[2];\n  always @(posedge clk)\n    if (_011_) \\buf_mem[7] [3] <= buf_in[3];\n  always @(posedge clk)\n    if (_011_) \\buf_mem[7] [4] <= buf_in[4];\n  always @(posedge clk)\n    if (_011_) \\buf_mem[7] [5] <= buf_in[5];\n  always @(posedge clk)\n    if (_011_) \\buf_mem[7] [6] <= buf_in[6];\n  always @(posedge clk)\n    if (_011_) \\buf_mem[7] [7] <= buf_in[7];\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:72.4-88.10\" *)\n  always @(posedge clk, posedge rst)\n    if (rst) rd_ptr[0] <= 1'h0;\n    else if (_003_) rd_ptr[0] <= _091_[0];\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:72.4-88.10\" *)\n  always @(posedge clk, posedge rst)\n    if (rst) rd_ptr[1] <= 1'h0;\n    else if (_003_) rd_ptr[1] <= _092_[1];\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:72.4-88.10\" *)\n  always @(posedge clk, posedge rst)\n    if (rst) rd_ptr[2] <= 1'h0;\n    else if (_003_) rd_ptr[2] <= _092_[2];\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:72.4-88.10\" *)\n  always @(posedge clk, posedge rst)\n    if (rst) wr_ptr[0] <= 1'h0;\n    else if (_000_[7]) wr_ptr[0] <= _089_[0];\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:72.4-88.10\" *)\n  always @(posedge clk, posedge rst)\n    if (rst) wr_ptr[1] <= 1'h0;\n    else if (_000_[7]) wr_ptr[1] <= _090_[1];\n  (* src = \"/Users/arades/Downloads/Verilog-SystemVerilog-master/sync_fifo2.v:72.4-88.10\" *)\n  always @(posedge clk, posedge rst)\n    if (rst) wr_ptr[2] <= 1'h0;\n    else if (_000_[7]) wr_ptr[2] <= _090_[2];\n  always @(posedge clk)\n    if (_009_) \\buf_mem[5] [0] <= buf_in[0];\n  always @(posedge clk)\n    if (_009_) \\buf_mem[5] [1] <= buf_in[1];\n  always @(posedge clk)\n    if (_009_) \\buf_mem[5] [2] <= buf_in[2];\n  always @(posedge clk)\n    if (_009_) \\buf_mem[5] [3] <= buf_in[3];\n  always @(posedge clk)\n    if (_009_) \\buf_mem[5] [4] <= buf_in[4];\n  always @(posedge clk)\n    if (_009_) \\buf_mem[5] [5] <= buf_in[5];\n  always @(posedge clk)\n    if (_009_) \\buf_mem[5] [6] <= buf_in[6];\n  always @(posedge clk)\n    if (_009_) \\buf_mem[5] [7] <= buf_in[7];\n  assign _000_[6:0] = { _000_[7], _000_[7], _000_[7], _000_[7], _000_[7], _000_[7], _000_[7] };\n  assign _088_[0] = _087_[0];\n  assign _089_[2:1] = wr_ptr[2:1];\n  assign _090_[0] = _089_[0];\n  assign _091_[2:1] = rd_ptr[2:1];\n  assign _092_[0] = _091_[0];\nendmodule\n", "answer": "`define BUF_WIDTH 3    // BUF_SIZE = 16 -> BUF_WIDTH = 4, no. of bits to be used in pointer\n`define BUF_SIZE ( 1<<`BUF_WIDTH )\n\nmodule fifo( clk, rst, buf_in, buf_out, wr_en, rd_en, buf_empty, buf_full, fifo_counter );\n\n   input                 rst, clk, wr_en, rd_en;   \n   // reset, system clock, write enable and read enable.\n   input [7:0]           buf_in;                   \n   // data input to be pushed to buffer\n   output[7:0]           buf_out;                  \n   // port to output the data using pop.\n   output                buf_empty, buf_full;      \n   // buffer empty and full indication \n   output[`BUF_WIDTH :0] fifo_counter;             \n   // number of data pushed in to buffer   \n\n   reg[7:0]              buf_out;\n   reg                   buf_empty, buf_full;\n   reg[`BUF_WIDTH :0]    fifo_counter;\n   reg[`BUF_WIDTH -1:0]  rd_ptr, wr_ptr;           // pointer to read and write addresses  \n   reg[7:0]              buf_mem[`BUF_SIZE -1 : 0]; //  \n\n   always @(fifo_counter)\n      begin\n         buf_empty = (fifo_counter==0);\n         buf_full = (fifo_counter== `BUF_SIZE);\n\n      end\n\n   always @(posedge clk or posedge rst)\n      begin\n         if( rst )\n             fifo_counter <= 0;\n\n         else if( (!buf_full && wr_en) && ( !buf_empty && rd_en ) )\n             fifo_counter <= fifo_counter;\n\n         else if( !buf_full && wr_en )\n             fifo_counter <= fifo_counter + 1;\n\n         else if( !buf_empty && rd_en )\n             fifo_counter <= fifo_counter - 1;\n         else\n            fifo_counter <= fifo_counter;\n      end\n\n   always @( posedge clk or posedge rst)\n      begin\n         if( rst )\n            buf_out <= 0;\n         else\n         begin\n            if( rd_en && !buf_empty )\n               buf_out <= buf_mem[rd_ptr];\n\n            else\n               buf_out <= buf_out;\n\n         end\n      end\n\n   always @(posedge clk)\n      begin\n\n         if( wr_en && !buf_full )\n            buf_mem[ wr_ptr ] <= buf_in;\n\n         else\n            buf_mem[ wr_ptr ] <= buf_mem[ wr_ptr ];\n      end\n\n   always@(posedge clk or posedge rst)\n      begin\n         if( rst )\n         begin\n            wr_ptr <= 0;\n            rd_ptr <= 0;\n         end\n         else\n         begin\n            if( !buf_full && wr_en )    wr_ptr <= wr_ptr + 1;\n                else  wr_ptr <= wr_ptr;\n\n            if( !buf_empty && rd_en )   rd_ptr <= rd_ptr + 1;\n            else rd_ptr <= rd_ptr;\n         end\n\n      end\n   endmodule\n"}